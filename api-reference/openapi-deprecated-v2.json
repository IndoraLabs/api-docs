{
  "openapi": "3.0.1",
  "info": {
    "title": "Indora Labs API",
    "description": "Comprehensive API for search, ingestion, file ops, redaction, detections, audit trail, and case management. All endpoints return strongly-typed JSON with explicit field descriptions and examples.",
    "version": "1.0.0",
    "license": {
      "name": "Proprietary"
    }
  },
  "servers": [
    {
      "url": "https://api.indoralabs.com"
    }
  ],
  "security": [
    { "apiKeyAuth": [] }
  ],
  "tags": [
    {
      "name": "Search"
    },
    {
      "name": "Uploads"
    },
    {
      "name": "Files"
    },
    {
      "name": "Redactions"
    },
    {
      "name": "Detections"
    },
    {
      "name": "Cases"
    },
    {
      "name": "Audit"
    },
    {
      "name": "Auth"
    },
    {
      "name": "Embeddings"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          ""
        ],
        "summary": "GET /",
        "description": "Endpoint for  operations.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      },
      "post": {
        "tags": [
          ""
        ],
        "summary": "POST /",
        "description": "Endpoint for  operations.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Request payload.",
                "additionalProperties": true
              }
            }
          }
        }
      }
    },
    "/:id": {
      "get": {
        "tags": [
          ":Id"
        ],
        "summary": "GET /:id",
        "description": "Endpoint for :id operations.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      },
      "patch": {
        "tags": [
          ":Id"
        ],
        "summary": "PATCH /:id",
        "description": "Endpoint for :id operations.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Request payload.",
                "additionalProperties": true
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          ":Id"
        ],
        "summary": "DELETE /:id",
        "description": "Endpoint for :id operations.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/:id/flags": {
      "post": {
        "tags": [
          ":Id"
        ],
        "summary": "POST /:id/flags",
        "description": "Endpoint for :id operations.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Request payload.",
                "additionalProperties": true
              }
            }
          }
        }
      }
    },
    "/:id/redact": {
      "post": {
        "tags": [
          ":Id"
        ],
        "summary": "POST /:id/redact",
        "description": "Endpoint for :id operations.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Request payload.",
                "additionalProperties": true
              }
            }
          }
        }
      }
    },
    "/:id/redaction/signed-url": {
      "get": {
        "tags": [
          ":Id"
        ],
        "summary": "GET /:id/redaction/signed-url",
        "description": "Endpoint for :id operations.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/:id/redaction/status": {
      "get": {
        "tags": [
          ":Id"
        ],
        "summary": "GET /:id/redaction/status",
        "description": "Endpoint for :id operations.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/:id/redactions": {
      "get": {
        "tags": [
          ":Id"
        ],
        "summary": "GET /:id/redactions",
        "description": "Endpoint for :id operations.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      },
      "patch": {
        "tags": [
          ":Id"
        ],
        "summary": "PATCH /:id/redactions",
        "description": "Endpoint for :id operations.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Request payload.",
                "additionalProperties": true
              }
            }
          }
        }
      }
    },
    "/:id/redactions/finalize": {
      "post": {
        "tags": [
          ":Id"
        ],
        "summary": "POST /:id/redactions/finalize",
        "description": "Endpoint for :id operations.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Request payload.",
                "additionalProperties": true
              }
            }
          }
        }
      }
    },
    "/:id/signed-url": {
      "get": {
        "tags": [
          ":Id"
        ],
        "summary": "GET /:id/signed-url",
        "description": "Endpoint for :id operations.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/attach": {
      "post": {
        "tags": [
          "Attach"
        ],
        "summary": "POST /attach",
        "description": "Endpoint for attach operations.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Request payload.",
                "additionalProperties": true
              }
            }
          }
        }
      }
    },
    "/cases/:caseId": {
      "get": {
        "tags": [
          "Cases"
        ],
        "summary": "GET /cases/:caseId",
        "description": "Endpoint for cases operations.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200
            },
            "description": "Max items to return. Default 50."
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "description": "Offset for pagination. Default 0."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CaseTimeline"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/complete": {
      "post": {
        "tags": [
          "Complete"
        ],
        "summary": "POST /complete",
        "description": "Endpoint for complete operations.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Request payload.",
                "additionalProperties": true
              }
            }
          }
        }
      }
    },
    "/create": {
      "post": {
        "tags": [
          "Create"
        ],
        "summary": "POST /create",
        "description": "Endpoint for create operations.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Request payload.",
                "additionalProperties": true
              }
            }
          }
        }
      }
    },
    "/detach": {
      "post": {
        "tags": [
          "Detach"
        ],
        "summary": "POST /detach",
        "description": "Endpoint for detach operations.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Request payload.",
                "additionalProperties": true
              }
            }
          }
        }
      }
    },
    "/file/:fileId": {
      "get": {
        "tags": [
          "File"
        ],
        "summary": "GET /file/:fileId",
        "description": "Endpoint for file operations.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/file/:fileId/detections": {
      "get": {
        "tags": [
          "File"
        ],
        "summary": "GET /file/:fileId/detections",
        "description": "Endpoint for file operations.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/files/:fileId": {
      "get": {
        "tags": [
          "Files"
        ],
        "summary": "GET /files/:fileId",
        "description": "Endpoint for files operations.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200
            },
            "description": "Max items to return. Default 50."
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "description": "Offset for pagination. Default 0."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Files"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/flags/:flagId": {
      "patch": {
        "tags": [
          "Flags"
        ],
        "summary": "PATCH /flags/:flagId",
        "description": "Endpoint for flags operations.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileRedactionFlags"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Request payload.",
                "additionalProperties": true
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Flags"
        ],
        "summary": "DELETE /flags/:flagId",
        "description": "Endpoint for flags operations.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileRedactionFlags"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/init": {
      "post": {
        "tags": [
          "Init"
        ],
        "summary": "POST /init",
        "description": "Endpoint for init operations.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Request payload.",
                "additionalProperties": true
              }
            }
          }
        }
      }
    },
    "/list": {
      "post": {
        "tags": [
          "List"
        ],
        "summary": "POST /list",
        "description": "Endpoint for list operations.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Request payload.",
                "additionalProperties": true
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "Login"
        ],
        "summary": "POST /login",
        "description": "Endpoint for login operations.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Request payload.",
                "additionalProperties": true
              }
            }
          }
        }
      }
    },
    "/logout": {
      "post": {
        "tags": [
          "Logout"
        ],
        "summary": "POST /logout",
        "description": "Endpoint for logout operations.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Request payload.",
                "additionalProperties": true
              }
            }
          }
        }
      }
    },
    "/me": {
      "get": {
        "tags": [
          "Me"
        ],
        "summary": "GET /me",
        "description": "Endpoint for me operations.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/refresh": {
      "post": {
        "tags": [
          "Refresh"
        ],
        "summary": "POST /refresh",
        "description": "Endpoint for refresh operations.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Request payload.",
                "additionalProperties": true
              }
            }
          }
        }
      }
    },
    "/register": {
      "post": {
        "tags": [
          "Register"
        ],
        "summary": "POST /register",
        "description": "Endpoint for register operations.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Request payload.",
                "additionalProperties": true
              }
            }
          }
        }
      }
    },
    "/remove": {
      "post": {
        "tags": [
          "Remove"
        ],
        "summary": "POST /remove",
        "description": "Endpoint for remove operations.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Request payload.",
                "additionalProperties": true
              }
            }
          }
        }
      }
    },
    "/semantic": {
      "post": {
        "tags": [
          "Semantic"
        ],
        "summary": "POST /semantic",
        "description": "Endpoint for semantic operations.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Request payload.",
                "additionalProperties": true
              }
            }
          }
        }
      }
    },
    "/sign-part": {
      "get": {
        "tags": [
          "Sign Part"
        ],
        "summary": "GET /sign-part",
        "description": "Endpoint for sign part operations.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/timeline": {
      "post": {
        "tags": [
          "Timeline"
        ],
        "summary": "POST /timeline",
        "description": "Endpoint for timeline operations.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Request payload.",
                "additionalProperties": true
              }
            }
          }
        }
      }
    },
    "/update": {
      "post": {
        "tags": [
          "Update"
        ],
        "summary": "POST /update",
        "description": "Endpoint for update operations.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Request payload.",
                "additionalProperties": true
              }
            }
          }
        }
      }
    },
    "/users/:userId": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "GET /users/:userId",
        "description": "Endpoint for users operations.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/users/by-email": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "GET /users/by-email",
        "description": "Endpoint for users operations.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/search/semantic": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "GET /search/semantic",
        "description": "Endpoint for search operations.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Files"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      },
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Hybrid search across uploaded content",
        "description": "Perform hybrid semantic + keyword search across uploaded files. Supports case/file/date filters.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Search results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/upload/init": {
      "post": {
        "tags": [
          "Uploads"
        ],
        "summary": "Start an upload session",
        "description": "Start an S3 upload session. Returns pre-signed URL for single PUT or UploadId for multipart.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadInitRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Upload session info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadInitResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server misconfiguration (bucket not configured)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/upload/sign-part": {
      "get": {
        "tags": [
          "Uploads"
        ],
        "summary": "Get a signed URL for multipart upload chunk",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "S3 object key."
          },
          {
            "name": "uploadIdS3",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "S3 UploadId from init."
          },
          {
            "name": "partNumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Part number to upload (1-indexed)."
          }
        ],
        "responses": {
          "200": {
            "description": "Signed URL",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "Pre-signed URL."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/upload/complete": {
      "post": {
        "tags": [
          "Uploads"
        ],
        "summary": "Complete an upload",
        "description": "Finalize upload, persist File row, optionally link to a case, enqueue parsing/embedding.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadCompleteRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Upload finalized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    },
                    "file": {
                      "$ref": "#/components/schemas/Files"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/files": {
      "get": {
        "tags": [
          "Files"
        ],
        "summary": "List files",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Free-text search across file metadata."
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter by review or processing status."
          },
          {
            "name": "caseId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Filter by related case."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Page size."
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Offset for pagination."
          }
        ],
        "responses": {
          "200": {
            "description": "File list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "files": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Files"
                      }
                    },
                    "total": {
                      "type": "integer",
                      "description": "Total rows matching the filter."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/files/{id}": {
      "get": {
        "tags": [
          "Files"
        ],
        "summary": "GET /files/{id}",
        "description": "Endpoint for files operations.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter `id`."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200
            },
            "description": "Max items to return. Default 50."
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "description": "Offset for pagination. Default 0."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Files"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/files/{id}/signed-url": {
      "get": {
        "tags": [
          "Files"
        ],
        "summary": "GET /files/{id}/signed-url",
        "description": "Endpoint for files operations.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter `id`."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200
            },
            "description": "Max items to return. Default 50."
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "description": "Offset for pagination. Default 0."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Files"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/files/{id}/redact": {
      "get": {
        "tags": [
          "Files"
        ],
        "summary": "GET /files/{id}/redact",
        "description": "Endpoint for files operations.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter `id`."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200
            },
            "description": "Max items to return. Default 50."
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "description": "Offset for pagination. Default 0."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Files"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/files/{id}/redactions": {
      "get": {
        "tags": [
          "Files"
        ],
        "summary": "GET /files/{id}/redactions",
        "description": "Endpoint for files operations.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter `id`."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200
            },
            "description": "Max items to return. Default 50."
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "description": "Offset for pagination. Default 0."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Files"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/files/{id}/redactions/finalize": {
      "get": {
        "tags": [
          "Files"
        ],
        "summary": "GET /files/{id}/redactions/finalize",
        "description": "Endpoint for files operations.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter `id`."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200
            },
            "description": "Max items to return. Default 50."
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "description": "Offset for pagination. Default 0."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Files"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/files/{id}/redaction/status": {
      "get": {
        "tags": [
          "Files"
        ],
        "summary": "GET /files/{id}/redaction/status",
        "description": "Endpoint for files operations.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter `id`."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200
            },
            "description": "Max items to return. Default 50."
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "description": "Offset for pagination. Default 0."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Files"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/files/{id}/redaction/signed-url": {
      "get": {
        "tags": [
          "Files"
        ],
        "summary": "GET /files/{id}/redaction/signed-url",
        "description": "Endpoint for files operations.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter `id`."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200
            },
            "description": "Max items to return. Default 50."
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "description": "Offset for pagination. Default 0."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Files"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/video-detections": {
      "get": {
        "tags": [
          "Detections"
        ],
        "summary": "GET /video-detections",
        "description": "Endpoint for detections operations.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200
            },
            "description": "Max items to return. Default 50."
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "description": "Offset for pagination. Default 0."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VideoDetections"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/video-detections/file/{id}": {
      "get": {
        "tags": [
          "Detections"
        ],
        "summary": "GET /video-detections/file/{id}",
        "description": "Endpoint for detections operations.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter `id`."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200
            },
            "description": "Max items to return. Default 50."
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "description": "Offset for pagination. Default 0."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoDetections"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/video-detections/{id}": {
      "get": {
        "tags": [
          "Detections"
        ],
        "summary": "GET /video-detections/{id}",
        "description": "Endpoint for detections operations.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter `id`."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200
            },
            "description": "Max items to return. Default 50."
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "description": "Offset for pagination. Default 0."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoDetections"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/video-detections/file/{id}/detections": {
      "get": {
        "tags": [
          "Detections"
        ],
        "summary": "GET /video-detections/file/{id}/detections",
        "description": "Endpoint for detections operations.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter `id`."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200
            },
            "description": "Max items to return. Default 50."
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "description": "Offset for pagination. Default 0."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoDetections"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuditLogs": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1,
            "description": "id field from audit_logs09192348."
          },
          "tenant_id": {
            "type": "string",
            "example": "demo-tenant",
            "description": "tenant_id field from audit_logs09192348."
          },
          "subject_id": {
            "type": "number",
            "description": "subject_id field from audit_logs09192348."
          },
          "action": {
            "type": "string",
            "example": "upload.init",
            "description": "action field from audit_logs09192348."
          },
          "details": {
            "type": "string",
            "example": "{\"key\": \"demo-tenant/raw/2ca1c8fc-0201-4a48-9c59-fdd83a0700d8/test.txt\", \"filename\": \"test.txt\", \"uploadId\": \"9ac30d35-4e68-48aa-b1b6-79fea06ab69b\", \"sizeBytes\": 12, \"contentType\": \"text/plain\"}",
            "description": "details field from audit_logs09192348."
          },
          "created_at": {
            "type": "string",
            "example": "2025-08-11 00:42:45.366 -0500",
            "description": "created_at field from audit_logs09192348."
          }
        },
        "additionalProperties": false,
        "description": "Schema inferred from audit_logs dataset.",
        "example": {
          "id": 1,
          "tenant_id": "demo-tenant",
          "subject_id": null,
          "action": "upload.init",
          "details": "{\"key\": \"demo-tenant/raw/2ca1c8fc-0201-4a48-9c59-fdd83a0700d8/test.txt\", \"filename\": \"test.txt\", \"uploadId\": \"9ac30d35-4e68-48aa-b1b6-79fea06ab69b\", \"sizeBytes\": 12, \"contentType\": \"text/plain\"}",
          "created_at": "2025-08-11 00:42:45.366 -0500"
        }
      },
      "AuditTrail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "3a84da72-45f5-42bd-8c77-650a9143e525",
            "description": "id field from audit_trail09192348."
          },
          "actor_id": {
            "type": "string",
            "format": "uuid",
            "example": "ab99f432-1141-43bf-a826-ea015838179f",
            "description": "actor_id field from audit_trail09192348."
          },
          "actor_email": {
            "type": "number",
            "description": "actor_email field from audit_trail09192348."
          },
          "entity_type": {
            "type": "string",
            "example": "FILE",
            "description": "entity_type field from audit_trail09192348."
          },
          "entity_id": {
            "type": "string",
            "format": "uuid",
            "example": "de13d372-a870-4eea-b975-9060d442f38c",
            "description": "entity_id field from audit_trail09192348."
          },
          "action": {
            "type": "string",
            "example": "FILE_REDACTED",
            "description": "action field from audit_trail09192348."
          },
          "reason": {
            "type": "string",
            "example": "Redactions replaced",
            "description": "reason field from audit_trail09192348."
          },
          "legal_reference": {
            "type": "number",
            "description": "legal_reference field from audit_trail09192348."
          },
          "details": {
            "type": "string",
            "example": "{\"boxes\": [{\"id\": \"d74ea477-65ff-40b3-97a4-68299815d044\", \"end\": 3.393787, \"type\": \"Face\", \"start\": 3.143787, \"reason\": \"This guy has a face and we don't like it\", \"created_by\": \"ab99f432-1141-43bf-a826-ea015838179f\", \"coordinates\": {\"x\": 180, \"y\": 49, \"width\": 59, \"height\": 67}}, {\"id\": \"f072c977-e119-4773-a839-5378bf209548\", \"end\": 3.393787, \"type\": \"Weapon\", \"start\": 3.143787, \"reason\": \"Test 1\", \"created_by\": \"ab99f432-1141-43bf-a826-ea015838179f\", \"coordinates\": {\"x\": 409, \"y\": 194, \"width\": 24, \"height\": 33}}, {\"id\": \"56bf4926-95ac-4b19-b854-947439534319\", \"end\": 3.393787, \"type\": \"Custom\", \"start\": 3.143787, \"reason\": \"I hate hands\", \"created_by\": \"ab99f432-1141-43bf-a826-ea015838179f\", \"coordinates\": {\"x\": 294, \"y\": 27, \"width\": 60, \"height\": 52}}, {\"id\": \"f2301fa9-99b0-41a1-845a-41605b0099e0\", \"end\": 2.038706, \"type\": \"Face\", \"start\": 1.788706, \"reason\": \"Hate his face\", \"created_by\": \"ab99f432-1141-43bf-a826-ea015838179f\", \"coordinates\": {\"x\": 235, \"y\": 179, \"width\": 41, \"height\": 34}}, {\"id\": \"1756764617824\", \"end\": 2.374473, \"type\": \"Face\", \"start\": 2.124473, \"reason\": \"Test 1\", \"created_by\": \"ab99f432-1141-43bf-a826-ea015838179f\", \"coordinates\": {\"x\": 213, \"y\": 138, \"width\": 39, \"height\": 46}}]}",
            "description": "details field from audit_trail09192348."
          },
          "ip_address": {
            "type": "number",
            "description": "ip_address field from audit_trail09192348."
          },
          "user_agent": {
            "type": "number",
            "description": "user_agent field from audit_trail09192348."
          },
          "created_at": {
            "type": "string",
            "example": "2025-09-01 17:10:31.479 -0500",
            "description": "created_at field from audit_trail09192348."
          }
        },
        "additionalProperties": false,
        "description": "Schema inferred from audit_trail dataset.",
        "example": {
          "id": "3a84da72-45f5-42bd-8c77-650a9143e525",
          "actor_id": "ab99f432-1141-43bf-a826-ea015838179f",
          "actor_email": null,
          "entity_type": "FILE",
          "entity_id": "de13d372-a870-4eea-b975-9060d442f38c",
          "action": "FILE_REDACTED",
          "reason": "Redactions replaced",
          "legal_reference": null,
          "details": "{\"boxes\": [{\"id\": \"d74ea477-65ff-40b3-97a4-68299815d044\", \"end\": 3.393787, \"type\": \"Face\", \"start\": 3.143787, \"reason\": \"This guy has a face and we don't like it\", \"created_by\": \"ab99f432-1141-43bf-a826-ea015838179f\", \"coordinates\": {\"x\": 180, \"y\": 49, \"width\": 59, \"height\": 67}}, {\"id\": \"f072c977-e119-4773-a839-5378bf209548\", \"end\": 3.393787, \"type\": \"Weapon\", \"start\": 3.143787, \"reason\": \"Test 1\", \"created_by\": \"ab99f432-1141-43bf-a826-ea015838179f\", \"coordinates\": {\"x\": 409, \"y\": 194, \"width\": 24, \"height\": 33}}, {\"id\": \"56bf4926-95ac-4b19-b854-947439534319\", \"end\": 3.393787, \"type\": \"Custom\", \"start\": 3.143787, \"reason\": \"I hate hands\", \"created_by\": \"ab99f432-1141-43bf-a826-ea015838179f\", \"coordinates\": {\"x\": 294, \"y\": 27, \"width\": 60, \"height\": 52}}, {\"id\": \"f2301fa9-99b0-41a1-845a-41605b0099e0\", \"end\": 2.038706, \"type\": \"Face\", \"start\": 1.788706, \"reason\": \"Hate his face\", \"created_by\": \"ab99f432-1141-43bf-a826-ea015838179f\", \"coordinates\": {\"x\": 235, \"y\": 179, \"width\": 41, \"height\": 34}}, {\"id\": \"1756764617824\", \"end\": 2.374473, \"type\": \"Face\", \"start\": 2.124473, \"reason\": \"Test 1\", \"created_by\": \"ab99f432-1141-43bf-a826-ea015838179f\", \"coordinates\": {\"x\": 213, \"y\": 138, \"width\": 39, \"height\": 46}}]}",
          "ip_address": null,
          "user_agent": null,
          "created_at": "2025-09-01 17:10:31.479 -0500"
        }
      },
      "CaseTimeline": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "aa030117-8ea7-4a1a-b300-4bc20778d3b0",
            "description": "id field from case_timeline09192348."
          },
          "case_id": {
            "type": "string",
            "format": "uuid",
            "example": "b612ec73-6657-4a4b-bfe9-959ac3e30cc5",
            "description": "case_id field from case_timeline09192348."
          },
          "event_date": {
            "type": "string",
            "example": "2025-08-17 17:03:27.851 -0500",
            "description": "event_date field from case_timeline09192348."
          },
          "title": {
            "type": "string",
            "example": "Case Created",
            "description": "title field from case_timeline09192348."
          },
          "description": {
            "type": "string",
            "example": "Case \u201cTest Case 2\u201d created",
            "description": "description field from case_timeline09192348."
          },
          "event_type": {
            "type": "string",
            "example": "created",
            "description": "event_type field from case_timeline09192348."
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "example": "ab99f432-1141-43bf-a826-ea015838179f",
            "description": "user_id field from case_timeline09192348."
          },
          "user_name": {
            "type": "string",
            "example": "josh kirk",
            "description": "user_name field from case_timeline09192348."
          }
        },
        "additionalProperties": false,
        "description": "Schema inferred from case_timeline dataset.",
        "example": {
          "id": "aa030117-8ea7-4a1a-b300-4bc20778d3b0",
          "case_id": "b612ec73-6657-4a4b-bfe9-959ac3e30cc5",
          "event_date": "2025-08-17 17:03:27.851 -0500",
          "title": "Case Created",
          "description": "Case \u201cTest Case 2\u201d created",
          "event_type": "created",
          "user_id": null,
          "user_name": null
        }
      },
      "Embeddings": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "f13240dc-d5d6-4074-b7f7-b67ebabc56b3",
            "description": "id field from embeddings09192348."
          },
          "org_id": {
            "type": "string",
            "format": "uuid",
            "example": "743db90f-7e76-49f7-8d4e-5f42a16efc06",
            "description": "org_id field from embeddings09192348."
          },
          "case_id": {
            "type": "number",
            "description": "case_id field from embeddings09192348."
          },
          "file_id": {
            "type": "string",
            "format": "uuid",
            "example": "7e743af5-22aa-4206-80e8-5d11ddedc277",
            "description": "file_id field from embeddings09192348."
          },
          "doc_id": {
            "type": "string",
            "example": "Zm9pYS1kZXYtYW5kcm9tZWRhLzc0M2RiOTBmLTdlNzYtNDlmNy04ZDRlLTVmNDJhMTZlZmMwNi9yYXcvZTg2M2E1NDEtMDgzMi00YmNlLWFiYjgtMTFmMzJmZmU1ZTNiL2ZvaWFfY29ycmVzcG9uZGVuY2UubWJveA#0",
            "description": "doc_id field from embeddings09192348."
          },
          "chunk_id": {
            "type": "integer",
            "example": 0,
            "description": "chunk_id field from embeddings09192348."
          },
          "content": {
            "type": "string",
            "example": "Hello,\n\nI am requesting copies of all incident reports filed by the Springfield Police Department between January 1, 2023 and December 31, 2023.\n\nThank you,\nJane Doe",
            "description": "content field from embeddings09192348."
          },
          "embedding": {
            "type": "string",
            "example": "[-0.035124697,0.01607243,-0.0036523028,-0.013510261,0.012609705,0.010164811,-0.00867602,-0.013989764,0.039275017,-0.021525176,0.0013677985,-0.0016741327,0.05394207,-0.02512725,-0.049426466,0.0148269795,0.03193402,0.0273213,-0.02872303,0.070770904,0.074614786,0.06883472,-0.020077221,-0.06703154,-0.034234155,-0.04028705,-0.017786233,-0.017641475,-0.027179949,-0.056638695,0.07769731,-0.001154513,-0.020342799,0.0089576375,0.018350711,0.05174565,0.0069032228,-0.02502022,0.13242613,0.018191507,0.0076773,-0.013795333,-0.0007930632,-0.018446723,-0.030611217,-0.021747649,0.00079628354,0.021811584,-0.00021211877,0.0039142617,0.07399729,0.00081047043,-0.04402692,0.03976713,0.019424658,0.029335769,-0.036762763,0.0012330782,-0.002884282,0.027287258,-0.011714113,0.0062972317,0.00834029,0.03867233,0.012049488,0.0068248427,-0.05865465,0.015282817,-0.015045487,-0.050490532,0.04530059,-0.035959184,0.025386987,0.06578341,-0.04847036,0.026838573,0.01476108,-0.01500926,0.012423831,-0.016823042,-0.0015788616,-0.015953971,-0.03931804,0.06609528,-0.020474307,-0.005602914,-0.009696957,0.014704631,0.020642271,-0.03733661,-0.004876306,0.013560934,0.072649956,0.046187777,0.012025485,-0.011532906,0.048016414,-0.015147648,-0.026921546,-0.021904761,-0.04778166,0.052221004,-0.07666058,0.009880925,0.0112253865,0.05153407,0.009593778,0.08344527,-0.012715199,0.0067566866,0.050037995,0.0056605507,-0.0026521794,-0.018017633,0.014997111,-0.015916336,0.015961971,0.07086297,0.055390395,-0.034485593,-0.031245342,-0.042511214,0.064091474,0.003222472,-0.02007522,0.0025588346,0.015497025,0.007075985,0.0038290285,0.007893272,-0.034834526,0.04812683,-0.026525017,0.00022974366,-0.051274646,0.07853518,0.0038450675,0.015761208,0.023227759,-0.05461697,0.005410928,-0.030971378,0.043221783,0.051139608,0.008925324,0.023900729,-0.04084856,0.024895223,-0.018315744,0.002527164,-0.011233332,0.008006257,-0.012735202,0.010591826,0.02470883,0.031757846,0.05693192,-0.009106273,0.06224783,-0.039676458,0.013616238,0.0019780593,0.033856034,-0.01861341,0.010215633,-0.031851787,-0.024546735,-0.009110458,0.011274652,-0.010392691,-0.0118143475,-0.00034056057,-0.008145895,0.017564245,0.009041339,-0.019233264,-0.014972886,0.040133253,-0.0016926534,-0.02428487,-0.0021134464,-0.044067666,-0.008441321,-0.007800815,0.01277254,0.007257637,-0.050729077,-0.023705263,-0.018715423,0.0334342,0.028938834,0.024461646,-0.007875196,-0.05716854,-0.07874758,0.03153151,0.010714573,-0.045466505,0.00822709,0.029877799,-0.018499026,0.023450008,-0.03183223,-0.024581406,0.015715128,0.006180689,-0.02958706,0.011681554,-0.0023377703,-0.04947159,0.022774294,-0.03310172,0.015036634,-0.040885642,0.035314586,0.010027757,0.004766663,-0.06303723,0.022081394,-0.048583925,-0.019333981,-0.0017062847,0.09329226,-0.0006076306,0.0011957403,-0.012210397,0.062256135,-0.00031306644,0.056215998,0.0068220273,-0.027450353,-0.017857464,0.0065296213,-0.015081195,-0.012533103,-0.04720116,0.073299915,0.03201077,-0.001356216,-0.029737893,0.063006304,-0.0010099025,0.06208959,0.010456107,-0.010544858,-0.02559831,0.029165972,-0.022605682,0.008415077,-0.03611009,-0.046588864,0.029678332,-0.0019717992,0.054748535,-0.004979467,0.0024030376,-0.012654748,0.041258764,0.0188414,-0.0019314607,0.013250525,-0.023354588,-0.020603063,-0.020960737,-0.03305475,0.019051243,-0.0028393322,0.039305747,0.045554925,-0.0288933,0.04576728,0.028750218,0.054602887,-0.04444871,-0.051471837,0.0055888384,0.013196111,0.029160304,0.0072518582,0.030399347,0.023790304,0.020597804,-0.022477,-0.05186174,-0.04640436,-0.025847971,0.04953618,-0.017602693,0.05405971,0.03652362,0.041290138,0.0022091616,0.06738684,-0.011809458,-0.0018146684,-0.026959589,-0.058159184,-0.035655368,0.00077016925,-0.05474476,0.009753872,0.050029878,0.04534938,0.00047413263,0.027849957,0.0047570923,-0.025369504,-0.05828907,-0.037216745,0.039145574,-0.023800643,-0.0044588475,-0.004719564,0.0072429683,0.013613829,0.043025903,-0.0061311275,0.016939055,-0.026864134,0.0032053401,0.0063571553,0.001760662,-0.020860206,-0.018291147,0.017076775,0.0042955675,-0.032650996,-0.0163718,-0.014346957,0.020716928,-0.02553545,-0.019805113,0.046671245,-0.046474554,-0.0066745654,-0.019201303,0.0050483644,-0.02430778,-0.010003458,-0.03347735,0.0053704414,-0.0030604522,0.008172713,0.036365896,-0.0074767754,-0.042324632,-0.011963699,-0.001080578,0.07697359,0.028635833,-0.001488332,-0.0022880975,0.013609014,-0.019668425,0.0026889988,0.029657144,0.02008417,0.022022868,0.009197284,0.0259798,0.03897535,0.008516015,0.0063233,0.0018277812,0.014370219,-0.047679964,-0.0059470306,0.02361837,-0.043818746,0.018358711,-0.0071864426,0.04606939,-0.009948487,0.0061851344,0.001304661,0.004988019,0.003596907,-0.0013803742,0.040965207,-0.009711125,-0.08752133,-0.051778838,0.03925726,-0.0040383507,-0.014739006,0.010169774,-0.0074589215,0.0012383797,0.026542315,0.07309251,0.0021838993,0.0046232375,-0.0022842821,0.01609573,-0.013212965,-0.03210367,0.028833633,0.009729794,-0.026399704,-0.0033305592,0.0010476849,0.036294557,-0.06523872,0.031714454,0.021556886,-0.015849218,0.02396359,-0.044268504,-0.059283175,0.015505397,-0.0083356965,0.0031219411,0.0384266,0.0051225587,-0.030166984,-0.0067418693,-0.019992784,-0.012280479,-0.0252366,0.0061870236,0.0029458452,0.020987926,0.012452668,0.030563183,0.023689857,0.02437375,-0.0699464,0.008262058,-0.04925216,-0.020676332,0.01957753,0.038673,0.044421487,-0.032611027,0.03652999,0.023464676,0.03424423,-0.06584895,-0.02656743,0.0014455118,-0.024592666,0.04014555,0.015766023,0.016177924,0.020482678,-0.006817435,0.0043593906,0.010838079,0.086121455,-0.045324262,-0.000686307,0.005749673,0.016519077,0.063888185,-0.052253857,0.039421286,0.026218459,-0.021382196,-0.022850228,-0.011054995,0.0007589085,-0.0001572046,0.038566396,0.009700457,-0.02053098,-0.015905965,0.0026557355,-0.05711965,-0.019896235,-0.014296358,-0.06651873,-0.0011840722,-0.026687147,-0.013544488,0.01869205,0.05824971,0.033581927,0.005400734,-0.050877467,-0.050622325,0.0068608476,0.036690604,-0.03165354,0.025917718,0.024907075,-0.041857246,-0.019754957,-0.03362045,-0.03411681,0.020047735,0.028193092,-0.0037106066,-0.025423065,-0.023604989,0.0036309666,-0.017007805,0.03349862,-3.036023e-05,0.030622004,-0.04562236,-0.0032359553,0.005504013,0.025909757,-0.025254527,0.021801507,0.06924559,-0.00553698,0.008424004,0.043313794,0.0025105323,-0.01422472,0.012102235,0.04819232,-0.042196177,-0.0021616004,-0.04190977,-0.006045784,-0.023096185,-0.046285607,0.0070861345,-0.07935365,0.00811704,0.009002593,-0.022729324,0.0130901905,-0.020951105,-0.05033392,-0.053068478,0.020902341,-0.014160564,-0.023026548,0.0020106188,0.025975958,-0.08800198,-0.021927532,-0.00073009013,0.012108754,0.039512508,-0.038754378,0.026476752,-0.022410471,-0.016868528,0.026514571,0.020665146,0.02390035,-0.044185225,-0.005972293,0.025010942,0.04241033,0.022347204,-0.010044203,-0.013737178,0.020893173,-0.026590543,0.014660625,-0.0055980245,-0.014182639,-0.0049801706,0.030149538,-0.03018043,0.02899158,-0.061775774,-0.10180931,-0.014324103,-0.024991233,0.008072034,0.03184245,-0.07594901,-0.015934635,0.029872727,0.011619805,-0.025319869,-0.010348538,0.02239973,-0.036764245,0.018303892,-0.0060767317,0.048134387,-0.0276849,0.013477442,-0.032122187,0.01950389,-0.06557623,0.02037296,-0.03957363,-0.018192617,-0.0015609335,0.037625276,-0.0321699,0.026697446,0.0003290036,-0.0013598716,0.011808718,0.008272429,-0.030341227,0.0031974318,-0.026554242,0.012511322,-0.04227663,0.011099742,0.022874307,-0.010964688,0.0115970615,0.007838264,-0.017764565,-0.030992845,-0.016429622,-0.016334463,0.007690505,-0.012225807,0.0030759354,0.013385059,0.014562687,0.009022004,-0.014615138,-0.029105814,0.0053314734,0.039204247,0.0068799607,-0.035724033,0.03197951,0.010857785,0.050671145,-0.010609589,-0.02099515,-0.041898508,0.0006695642,-0.0037142364,0.040817488,-0.027949674,0.09393634,0.014008471,0.046721954,-0.0138485255,0.03242934,-0.05979693,0.03171236,-0.032117154,0.01809557,-0.017508162,0.0113015445,-0.0044922587,-0.051285148,0.050081372,0.010775256,-0.046532266,0.034788594,0.02639363,-0.025893679,0.03457338,0.0147853065,-0.016967874,0.030943079,0.0026699593,0.01340373,0.057884924,-0.03738773,-0.025812225,-0.0005298988,0.018136166,-0.07052841,0.062237907,0.093258336,0.0017196569,-0.002715891,-0.022945529,-0.0170587,-0.026190197,-0.008738116,0.037910458,-0.07121324,-0.010502927,0.030481283,0.059104335,-0.032525647,0.014811902,-0.022061909,-0.006626596,0.005601284,0.008300396,0.0129307825,-0.009600371,0.044030696,-0.00789016,-0.014901728,-0.01972288,0.050252102,-0.009122312,0.01839142,-0.0004766885,0.008525201,0.05903544,0.021187803,0.018845882,-0.00089077663,0.0027175578,-0.03247979,-0.037270084,0.002606956,-0.037062503,0.0037822076,0.03482949,-0.032585543,-0.049479607,0.039259367,-0.0028529312,-0.03815608,0.023941921,-0.008199828,0.020098481,-0.030050915,0.010369874,-0.01807338,-0.039767876,-0.00605234,-0.028048648,0.011415114,0.028707396,0.008238759,0.037896827,-0.009650715,0.011475083,0.024560662,-0.0022499075,-0.016097618,-0.018539622,0.0032248425,0.036794174,0.020782419,0.01737311,-0.073770575,0.042180616,-0.00133172,0.006023633,-0.017001009,0.043817855,-0.01108848,-0.040179484,0.040837638,-0.04255744,0.026996445,-0.057734538,-0.031653095,-0.025496222,0.019134475,0.0114519885,-0.02754796,0.0064461567,-0.023676407,0.0025282751,0.0052210893,-0.023968887,0.0042404127,-0.056923363,0.028002642,-0.016954686,0.012026633,-0.008514237,0.049259417,-0.008492012,0.008984369,0.013870008,-0.047383185,-0.029046252,0.0074744043,0.0051085963,0.018396901,0.0016197185,-0.05858294,0.08622605,0.070813045,0.021865515,0.02836439,0.04767352,-0.05418058,-0.032603286,0.00942998,0.018898038,0.013915088,-0.01778364,-0.0052409805,0.030348191,-0.0024789358,-0.0018994939,-0.03406019,0.044146787,0.0051029082,-0.03850697,0.058450583,-0.034742367,0.018489989,0.009146611,0.011764713,0.0336163,0.015623263,-0.001300406,-0.053138413,0.041468825,-0.0035684407,0.0615676,0.0042141504,-0.006129275,0.04765033,0.010034999,-0.034723252,-0.008315027,0.033358786,0.017091889,0.039768245,-0.045884665,-0.029271986,-0.01045844,-0.011487492,0.008936697,-0.00029197126,-0.059542466,-0.025470998,0.016408656,-0.022414621,0.0526588,0.038878877,-0.020349218,0.00016329794,-0.026681442,0.005185233,0.0028338314,-0.02743835,-0.01496733,0.0155779235,-0.030477837,0.037804373,0.015873035,-0.041069146,0.04763225,-0.01253214,0.013806186,-0.008960662,-0.027308704,0.04739074,-0.035289925,0.0034925796,0.016508104,-0.060191583,0.011876764,0.017909888,0.011615435,0.030675713,0.010765292,-0.010486332,-0.015077713,0.03553224,0.05309604,0.024597038,0.0582223,-0.0030497469,0.010313125,0.0051633785,-0.016805308,0.04285444,0.029944642,-0.021253292,-0.019979358,-0.014055809,-0.014852204,0.021325894,-0.029803243,-0.018557275,-0.04211483,-0.008869244,0.0012965675,0.023744266,-0.03367231,-0.028808003,0.043379135,-0.022832893,-0.0085560195,0.008276801,-0.02346801,0.015297592,0.010557008,0.046273567,0.022928461,0.026637271,0.029611805,-0.019793,0.018927079,0.004799926,-0.01826607,0.026687147,0.025871048,-0.00032693852,0.07130955,0.057814546,-0.03288851,0.0016480554,-0.024212621,-0.026631288,0.0023425114,0.034575436,0.0031202373,-0.07772931,-0.0118224975,0.013714582,-0.0043882458,0.029794125,-0.050696336,-0.07120672,-0.01632409,0.042254403,0.0065594763,0.0024608965,-0.009930115,0.023374442,0.00011419929,-0.052504264,0.009854254,0.01691283,-0.010376541,0.029687518,0.00066911965,0.047144193,-0.023516238,-0.045346487,0.034541007,0.03864196,0.004513298,-0.04019501,-0.06704414,-0.019127918,-0.020691592,0.023472825,-0.02230933,-0.000775818,0.026151378,0.023395186,-0.0042569702,0.048613094,0.031982023,-0.021571552,-0.021917151,-0.041211348,-0.0025585382,-0.059243318,-0.014318805,-0.007840931,-0.031462997,-0.002455683,0.018159429,0.028823264,-0.02062477,0.0209334,0.018269775,0.009703717,-0.02925039,0.0029408075,0.012354415,0.037989732,-0.0048997165,0.005172491,0.007002531,0.017189384,-0.011981999,0.0036357082,-0.004523818,-0.0042527476,-0.03640805,-0.015657047,-0.03270804,-0.0215667,-0.007337054,0.010612199,-0.041167084,-0.012543179,0.001078948,0.0018652906,0.01022467,-0.005760415,0.020896599,0.008375998,-0.016525153,-0.032606695,-0.027265884,-0.034622353,0.020637957,-0.015236696,-0.029303322,0.023411483,0.0072997166,-0.00031577973,-0.0043958025,0.006349229,-0.0067243855,0.050583728,0.0077298433,-0.0025629462,0.08448342,-0.044753376,0.06184712,0.024898928,0.035338886,0.019189259,-0.004090209,0.0302181,-0.030093197,-0.012074973,0.031632945,-0.0011016546,-0.053724226,0.010917645,-0.009585452,0.022587085,-0.052736737,0.05802494,0.0047564395,-0.014385677,-0.034251045,-0.017488865,-0.008168611,-0.002832498,0.067580715,0.02132419,-0.010360316,-0.007269046,-0.024583776]",
            "description": "embedding field from embeddings09192348."
          },
          "meta": {
            "type": "string",
            "example": "{\"source\": {\"s3\": \"s3://foia-dev-andromeda-parse/parsed/743db90f-7e76-49f7-8d4e-5f42a16efc06/Zm9pYS1kZXYtYW5kcm9tZWRhLzc0M2RiOTBmLTdlNzYtNDlmNy04ZDRlLTVmNDJhMTZlZmMwNi9yYXcvZTg2M2E1NDEtMDgzMi00YmNlLWFiYjgtMTFmMzJmZmU1ZTNiL2ZvaWFfY29ycmVzcG9uZGVuY2UubWJveA/items/000000.json\", \"type\": \"email\", \"filename\": \"FOIA Request - Police Department Records\"}, \"temporal\": {\"message_id\": null, \"references\": null, \"in_reply_to\": null, \"date_sent_utc\": \"2024-03-04T15:15:00.000Z\", \"date_confidence\": 1, \"date_received_utc\": null}}",
            "description": "meta field from embeddings09192348."
          },
          "created_at": {
            "type": "string",
            "example": "2025-08-29 10:28:53.568 -0500",
            "description": "created_at field from embeddings09192348."
          }
        },
        "additionalProperties": false,
        "description": "Schema inferred from embeddings dataset.",
        "example": {
          "id": "f13240dc-d5d6-4074-b7f7-b67ebabc56b3",
          "org_id": "743db90f-7e76-49f7-8d4e-5f42a16efc06",
          "case_id": null,
          "file_id": "7e743af5-22aa-4206-80e8-5d11ddedc277",
          "doc_id": "Zm9pYS1kZXYtYW5kcm9tZWRhLzc0M2RiOTBmLTdlNzYtNDlmNy04ZDRlLTVmNDJhMTZlZmMwNi9yYXcvZTg2M2E1NDEtMDgzMi00YmNlLWFiYjgtMTFmMzJmZmU1ZTNiL2ZvaWFfY29ycmVzcG9uZGVuY2UubWJveA#0",
          "chunk_id": 0,
          "content": "Hello,\n\nI am requesting copies of all incident reports filed by the Springfield Police Department between January 1, 2023 and December 31, 2023.\n\nThank you,\nJane Doe",
          "embedding": "[-0.035124697,0.01607243,-0.0036523028,-0.013510261,0.012609705,0.010164811,-0.00867602,-0.013989764,0.039275017,-0.021525176,0.0013677985,-0.0016741327,0.05394207,-0.02512725,-0.049426466,0.0148269795,0.03193402,0.0273213,-0.02872303,0.070770904,0.074614786,0.06883472,-0.020077221,-0.06703154,-0.034234155,-0.04028705,-0.017786233,-0.017641475,-0.027179949,-0.056638695,0.07769731,-0.001154513,-0.020342799,0.0089576375,0.018350711,0.05174565,0.0069032228,-0.02502022,0.13242613,0.018191507,0.0076773,-0.013795333,-0.0007930632,-0.018446723,-0.030611217,-0.021747649,0.00079628354,0.021811584,-0.00021211877,0.0039142617,0.07399729,0.00081047043,-0.04402692,0.03976713,0.019424658,0.029335769,-0.036762763,0.0012330782,-0.002884282,0.027287258,-0.011714113,0.0062972317,0.00834029,0.03867233,0.012049488,0.0068248427,-0.05865465,0.015282817,-0.015045487,-0.050490532,0.04530059,-0.035959184,0.025386987,0.06578341,-0.04847036,0.026838573,0.01476108,-0.01500926,0.012423831,-0.016823042,-0.0015788616,-0.015953971,-0.03931804,0.06609528,-0.020474307,-0.005602914,-0.009696957,0.014704631,0.020642271,-0.03733661,-0.004876306,0.013560934,0.072649956,0.046187777,0.012025485,-0.011532906,0.048016414,-0.015147648,-0.026921546,-0.021904761,-0.04778166,0.052221004,-0.07666058,0.009880925,0.0112253865,0.05153407,0.009593778,0.08344527,-0.012715199,0.0067566866,0.050037995,0.0056605507,-0.0026521794,-0.018017633,0.014997111,-0.015916336,0.015961971,0.07086297,0.055390395,-0.034485593,-0.031245342,-0.042511214,0.064091474,0.003222472,-0.02007522,0.0025588346,0.015497025,0.007075985,0.0038290285,0.007893272,-0.034834526,0.04812683,-0.026525017,0.00022974366,-0.051274646,0.07853518,0.0038450675,0.015761208,0.023227759,-0.05461697,0.005410928,-0.030971378,0.043221783,0.051139608,0.008925324,0.023900729,-0.04084856,0.024895223,-0.018315744,0.002527164,-0.011233332,0.008006257,-0.012735202,0.010591826,0.02470883,0.031757846,0.05693192,-0.009106273,0.06224783,-0.039676458,0.013616238,0.0019780593,0.033856034,-0.01861341,0.010215633,-0.031851787,-0.024546735,-0.009110458,0.011274652,-0.010392691,-0.0118143475,-0.00034056057,-0.008145895,0.017564245,0.009041339,-0.019233264,-0.014972886,0.040133253,-0.0016926534,-0.02428487,-0.0021134464,-0.044067666,-0.008441321,-0.007800815,0.01277254,0.007257637,-0.050729077,-0.023705263,-0.018715423,0.0334342,0.028938834,0.024461646,-0.007875196,-0.05716854,-0.07874758,0.03153151,0.010714573,-0.045466505,0.00822709,0.029877799,-0.018499026,0.023450008,-0.03183223,-0.024581406,0.015715128,0.006180689,-0.02958706,0.011681554,-0.0023377703,-0.04947159,0.022774294,-0.03310172,0.015036634,-0.040885642,0.035314586,0.010027757,0.004766663,-0.06303723,0.022081394,-0.048583925,-0.019333981,-0.0017062847,0.09329226,-0.0006076306,0.0011957403,-0.012210397,0.062256135,-0.00031306644,0.056215998,0.0068220273,-0.027450353,-0.017857464,0.0065296213,-0.015081195,-0.012533103,-0.04720116,0.073299915,0.03201077,-0.001356216,-0.029737893,0.063006304,-0.0010099025,0.06208959,0.010456107,-0.010544858,-0.02559831,0.029165972,-0.022605682,0.008415077,-0.03611009,-0.046588864,0.029678332,-0.0019717992,0.054748535,-0.004979467,0.0024030376,-0.012654748,0.041258764,0.0188414,-0.0019314607,0.013250525,-0.023354588,-0.020603063,-0.020960737,-0.03305475,0.019051243,-0.0028393322,0.039305747,0.045554925,-0.0288933,0.04576728,0.028750218,0.054602887,-0.04444871,-0.051471837,0.0055888384,0.013196111,0.029160304,0.0072518582,0.030399347,0.023790304,0.020597804,-0.022477,-0.05186174,-0.04640436,-0.025847971,0.04953618,-0.017602693,0.05405971,0.03652362,0.041290138,0.0022091616,0.06738684,-0.011809458,-0.0018146684,-0.026959589,-0.058159184,-0.035655368,0.00077016925,-0.05474476,0.009753872,0.050029878,0.04534938,0.00047413263,0.027849957,0.0047570923,-0.025369504,-0.05828907,-0.037216745,0.039145574,-0.023800643,-0.0044588475,-0.004719564,0.0072429683,0.013613829,0.043025903,-0.0061311275,0.016939055,-0.026864134,0.0032053401,0.0063571553,0.001760662,-0.020860206,-0.018291147,0.017076775,0.0042955675,-0.032650996,-0.0163718,-0.014346957,0.020716928,-0.02553545,-0.019805113,0.046671245,-0.046474554,-0.0066745654,-0.019201303,0.0050483644,-0.02430778,-0.010003458,-0.03347735,0.0053704414,-0.0030604522,0.008172713,0.036365896,-0.0074767754,-0.042324632,-0.011963699,-0.001080578,0.07697359,0.028635833,-0.001488332,-0.0022880975,0.013609014,-0.019668425,0.0026889988,0.029657144,0.02008417,0.022022868,0.009197284,0.0259798,0.03897535,0.008516015,0.0063233,0.0018277812,0.014370219,-0.047679964,-0.0059470306,0.02361837,-0.043818746,0.018358711,-0.0071864426,0.04606939,-0.009948487,0.0061851344,0.001304661,0.004988019,0.003596907,-0.0013803742,0.040965207,-0.009711125,-0.08752133,-0.051778838,0.03925726,-0.0040383507,-0.014739006,0.010169774,-0.0074589215,0.0012383797,0.026542315,0.07309251,0.0021838993,0.0046232375,-0.0022842821,0.01609573,-0.013212965,-0.03210367,0.028833633,0.009729794,-0.026399704,-0.0033305592,0.0010476849,0.036294557,-0.06523872,0.031714454,0.021556886,-0.015849218,0.02396359,-0.044268504,-0.059283175,0.015505397,-0.0083356965,0.0031219411,0.0384266,0.0051225587,-0.030166984,-0.0067418693,-0.019992784,-0.012280479,-0.0252366,0.0061870236,0.0029458452,0.020987926,0.012452668,0.030563183,0.023689857,0.02437375,-0.0699464,0.008262058,-0.04925216,-0.020676332,0.01957753,0.038673,0.044421487,-0.032611027,0.03652999,0.023464676,0.03424423,-0.06584895,-0.02656743,0.0014455118,-0.024592666,0.04014555,0.015766023,0.016177924,0.020482678,-0.006817435,0.0043593906,0.010838079,0.086121455,-0.045324262,-0.000686307,0.005749673,0.016519077,0.063888185,-0.052253857,0.039421286,0.026218459,-0.021382196,-0.022850228,-0.011054995,0.0007589085,-0.0001572046,0.038566396,0.009700457,-0.02053098,-0.015905965,0.0026557355,-0.05711965,-0.019896235,-0.014296358,-0.06651873,-0.0011840722,-0.026687147,-0.013544488,0.01869205,0.05824971,0.033581927,0.005400734,-0.050877467,-0.050622325,0.0068608476,0.036690604,-0.03165354,0.025917718,0.024907075,-0.041857246,-0.019754957,-0.03362045,-0.03411681,0.020047735,0.028193092,-0.0037106066,-0.025423065,-0.023604989,0.0036309666,-0.017007805,0.03349862,-3.036023e-05,0.030622004,-0.04562236,-0.0032359553,0.005504013,0.025909757,-0.025254527,0.021801507,0.06924559,-0.00553698,0.008424004,0.043313794,0.0025105323,-0.01422472,0.012102235,0.04819232,-0.042196177,-0.0021616004,-0.04190977,-0.006045784,-0.023096185,-0.046285607,0.0070861345,-0.07935365,0.00811704,0.009002593,-0.022729324,0.0130901905,-0.020951105,-0.05033392,-0.053068478,0.020902341,-0.014160564,-0.023026548,0.0020106188,0.025975958,-0.08800198,-0.021927532,-0.00073009013,0.012108754,0.039512508,-0.038754378,0.026476752,-0.022410471,-0.016868528,0.026514571,0.020665146,0.02390035,-0.044185225,-0.005972293,0.025010942,0.04241033,0.022347204,-0.010044203,-0.013737178,0.020893173,-0.026590543,0.014660625,-0.0055980245,-0.014182639,-0.0049801706,0.030149538,-0.03018043,0.02899158,-0.061775774,-0.10180931,-0.014324103,-0.024991233,0.008072034,0.03184245,-0.07594901,-0.015934635,0.029872727,0.011619805,-0.025319869,-0.010348538,0.02239973,-0.036764245,0.018303892,-0.0060767317,0.048134387,-0.0276849,0.013477442,-0.032122187,0.01950389,-0.06557623,0.02037296,-0.03957363,-0.018192617,-0.0015609335,0.037625276,-0.0321699,0.026697446,0.0003290036,-0.0013598716,0.011808718,0.008272429,-0.030341227,0.0031974318,-0.026554242,0.012511322,-0.04227663,0.011099742,0.022874307,-0.010964688,0.0115970615,0.007838264,-0.017764565,-0.030992845,-0.016429622,-0.016334463,0.007690505,-0.012225807,0.0030759354,0.013385059,0.014562687,0.009022004,-0.014615138,-0.029105814,0.0053314734,0.039204247,0.0068799607,-0.035724033,0.03197951,0.010857785,0.050671145,-0.010609589,-0.02099515,-0.041898508,0.0006695642,-0.0037142364,0.040817488,-0.027949674,0.09393634,0.014008471,0.046721954,-0.0138485255,0.03242934,-0.05979693,0.03171236,-0.032117154,0.01809557,-0.017508162,0.0113015445,-0.0044922587,-0.051285148,0.050081372,0.010775256,-0.046532266,0.034788594,0.02639363,-0.025893679,0.03457338,0.0147853065,-0.016967874,0.030943079,0.0026699593,0.01340373,0.057884924,-0.03738773,-0.025812225,-0.0005298988,0.018136166,-0.07052841,0.062237907,0.093258336,0.0017196569,-0.002715891,-0.022945529,-0.0170587,-0.026190197,-0.008738116,0.037910458,-0.07121324,-0.010502927,0.030481283,0.059104335,-0.032525647,0.014811902,-0.022061909,-0.006626596,0.005601284,0.008300396,0.0129307825,-0.009600371,0.044030696,-0.00789016,-0.014901728,-0.01972288,0.050252102,-0.009122312,0.01839142,-0.0004766885,0.008525201,0.05903544,0.021187803,0.018845882,-0.00089077663,0.0027175578,-0.03247979,-0.037270084,0.002606956,-0.037062503,0.0037822076,0.03482949,-0.032585543,-0.049479607,0.039259367,-0.0028529312,-0.03815608,0.023941921,-0.008199828,0.020098481,-0.030050915,0.010369874,-0.01807338,-0.039767876,-0.00605234,-0.028048648,0.011415114,0.028707396,0.008238759,0.037896827,-0.009650715,0.011475083,0.024560662,-0.0022499075,-0.016097618,-0.018539622,0.0032248425,0.036794174,0.020782419,0.01737311,-0.073770575,0.042180616,-0.00133172,0.006023633,-0.017001009,0.043817855,-0.01108848,-0.040179484,0.040837638,-0.04255744,0.026996445,-0.057734538,-0.031653095,-0.025496222,0.019134475,0.0114519885,-0.02754796,0.0064461567,-0.023676407,0.0025282751,0.0052210893,-0.023968887,0.0042404127,-0.056923363,0.028002642,-0.016954686,0.012026633,-0.008514237,0.049259417,-0.008492012,0.008984369,0.013870008,-0.047383185,-0.029046252,0.0074744043,0.0051085963,0.018396901,0.0016197185,-0.05858294,0.08622605,0.070813045,0.021865515,0.02836439,0.04767352,-0.05418058,-0.032603286,0.00942998,0.018898038,0.013915088,-0.01778364,-0.0052409805,0.030348191,-0.0024789358,-0.0018994939,-0.03406019,0.044146787,0.0051029082,-0.03850697,0.058450583,-0.034742367,0.018489989,0.009146611,0.011764713,0.0336163,0.015623263,-0.001300406,-0.053138413,0.041468825,-0.0035684407,0.0615676,0.0042141504,-0.006129275,0.04765033,0.010034999,-0.034723252,-0.008315027,0.033358786,0.017091889,0.039768245,-0.045884665,-0.029271986,-0.01045844,-0.011487492,0.008936697,-0.00029197126,-0.059542466,-0.025470998,0.016408656,-0.022414621,0.0526588,0.038878877,-0.020349218,0.00016329794,-0.026681442,0.005185233,0.0028338314,-0.02743835,-0.01496733,0.0155779235,-0.030477837,0.037804373,0.015873035,-0.041069146,0.04763225,-0.01253214,0.013806186,-0.008960662,-0.027308704,0.04739074,-0.035289925,0.0034925796,0.016508104,-0.060191583,0.011876764,0.017909888,0.011615435,0.030675713,0.010765292,-0.010486332,-0.015077713,0.03553224,0.05309604,0.024597038,0.0582223,-0.0030497469,0.010313125,0.0051633785,-0.016805308,0.04285444,0.029944642,-0.021253292,-0.019979358,-0.014055809,-0.014852204,0.021325894,-0.029803243,-0.018557275,-0.04211483,-0.008869244,0.0012965675,0.023744266,-0.03367231,-0.028808003,0.043379135,-0.022832893,-0.0085560195,0.008276801,-0.02346801,0.015297592,0.010557008,0.046273567,0.022928461,0.026637271,0.029611805,-0.019793,0.018927079,0.004799926,-0.01826607,0.026687147,0.025871048,-0.00032693852,0.07130955,0.057814546,-0.03288851,0.0016480554,-0.024212621,-0.026631288,0.0023425114,0.034575436,0.0031202373,-0.07772931,-0.0118224975,0.013714582,-0.0043882458,0.029794125,-0.050696336,-0.07120672,-0.01632409,0.042254403,0.0065594763,0.0024608965,-0.009930115,0.023374442,0.00011419929,-0.052504264,0.009854254,0.01691283,-0.010376541,0.029687518,0.00066911965,0.047144193,-0.023516238,-0.045346487,0.034541007,0.03864196,0.004513298,-0.04019501,-0.06704414,-0.019127918,-0.020691592,0.023472825,-0.02230933,-0.000775818,0.026151378,0.023395186,-0.0042569702,0.048613094,0.031982023,-0.021571552,-0.021917151,-0.041211348,-0.0025585382,-0.059243318,-0.014318805,-0.007840931,-0.031462997,-0.002455683,0.018159429,0.028823264,-0.02062477,0.0209334,0.018269775,0.009703717,-0.02925039,0.0029408075,0.012354415,0.037989732,-0.0048997165,0.005172491,0.007002531,0.017189384,-0.011981999,0.0036357082,-0.004523818,-0.0042527476,-0.03640805,-0.015657047,-0.03270804,-0.0215667,-0.007337054,0.010612199,-0.041167084,-0.012543179,0.001078948,0.0018652906,0.01022467,-0.005760415,0.020896599,0.008375998,-0.016525153,-0.032606695,-0.027265884,-0.034622353,0.020637957,-0.015236696,-0.029303322,0.023411483,0.0072997166,-0.00031577973,-0.0043958025,0.006349229,-0.0067243855,0.050583728,0.0077298433,-0.0025629462,0.08448342,-0.044753376,0.06184712,0.024898928,0.035338886,0.019189259,-0.004090209,0.0302181,-0.030093197,-0.012074973,0.031632945,-0.0011016546,-0.053724226,0.010917645,-0.009585452,0.022587085,-0.052736737,0.05802494,0.0047564395,-0.014385677,-0.034251045,-0.017488865,-0.008168611,-0.002832498,0.067580715,0.02132419,-0.010360316,-0.007269046,-0.024583776]",
          "meta": "{\"source\": {\"s3\": \"s3://foia-dev-andromeda-parse/parsed/743db90f-7e76-49f7-8d4e-5f42a16efc06/Zm9pYS1kZXYtYW5kcm9tZWRhLzc0M2RiOTBmLTdlNzYtNDlmNy04ZDRlLTVmNDJhMTZlZmMwNi9yYXcvZTg2M2E1NDEtMDgzMi00YmNlLWFiYjgtMTFmMzJmZmU1ZTNiL2ZvaWFfY29ycmVzcG9uZGVuY2UubWJveA/items/000000.json\", \"type\": \"email\", \"filename\": \"FOIA Request - Police Department Records\"}, \"temporal\": {\"message_id\": null, \"references\": null, \"in_reply_to\": null, \"date_sent_utc\": \"2024-03-04T15:15:00.000Z\", \"date_confidence\": 1, \"date_received_utc\": null}}",
          "created_at": "2025-08-29 10:28:53.568 -0500"
        }
      },
      "FileJobs": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "942cde08-5578-48dd-9c34-4f4b77f0ca5a",
            "description": "id field from file_jobs09192348."
          },
          "org_id": {
            "type": "string",
            "format": "uuid",
            "example": "743db90f-7e76-49f7-8d4e-5f42a16efc06",
            "description": "org_id field from file_jobs09192348."
          },
          "file_id": {
            "type": "string",
            "format": "uuid",
            "example": "de13d372-a870-4eea-b975-9060d442f38c",
            "description": "file_id field from file_jobs09192348."
          },
          "kind": {
            "type": "string",
            "example": "redact",
            "description": "kind field from file_jobs09192348."
          },
          "status": {
            "type": "string",
            "example": "running",
            "description": "status field from file_jobs09192348."
          },
          "task_arn": {
            "type": "string",
            "example": "arn:aws:ecs:us-east-2:307946666957:task/foia-dev-cluster/29031ccd3909489e8be4de718da09009",
            "description": "task_arn field from file_jobs09192348."
          },
          "output_bucket": {
            "type": "string",
            "example": "foia-dev-andromeda-parse",
            "description": "output_bucket field from file_jobs09192348."
          },
          "output_key": {
            "type": "string",
            "example": "redacted/743db90f-7e76-49f7-8d4e-5f42a16efc06/de13d372-a870-4eea-b975-9060d442f38c.mp4",
            "description": "output_key field from file_jobs09192348."
          },
          "error": {
            "type": "string",
            "example": "messages.0.content.1.image.source.base64.data: At least one of the image dimensions exceed max allowed size: 8000 pixels",
            "description": "error field from file_jobs09192348."
          },
          "created_at": {
            "type": "string",
            "example": "2025-09-07 21:28:47.620 -0500",
            "description": "created_at field from file_jobs09192348."
          },
          "started_at": {
            "type": "string",
            "example": "2025-09-07 21:28:47.825 -0500",
            "description": "started_at field from file_jobs09192348."
          },
          "finished_at": {
            "type": "string",
            "example": "2025-08-29 10:31:24.178 -0500",
            "description": "finished_at field from file_jobs09192348."
          }
        },
        "additionalProperties": false,
        "description": "Schema inferred from file_jobs dataset.",
        "example": {
          "id": "942cde08-5578-48dd-9c34-4f4b77f0ca5a",
          "org_id": "743db90f-7e76-49f7-8d4e-5f42a16efc06",
          "file_id": "de13d372-a870-4eea-b975-9060d442f38c",
          "kind": "redact",
          "status": "running",
          "task_arn": "arn:aws:ecs:us-east-2:307946666957:task/foia-dev-cluster/29031ccd3909489e8be4de718da09009",
          "output_bucket": "foia-dev-andromeda-parse",
          "output_key": "redacted/743db90f-7e76-49f7-8d4e-5f42a16efc06/de13d372-a870-4eea-b975-9060d442f38c.mp4",
          "error": null,
          "created_at": "2025-09-07 21:28:47.620 -0500",
          "started_at": "2025-09-07 21:28:47.825 -0500",
          "finished_at": null
        }
      },
      "FileRedactionFlags": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "7f20f464-83e0-460d-b3e6-611c379c4341",
            "description": "id field from file_redaction_flags09192348."
          },
          "file_id": {
            "type": "string",
            "format": "uuid",
            "example": "de13d372-a870-4eea-b975-9060d442f38c",
            "description": "file_id field from file_redaction_flags09192348."
          },
          "kind": {
            "type": "string",
            "example": "Face",
            "description": "kind field from file_redaction_flags09192348."
          },
          "reason": {
            "type": "string",
            "example": "This is an officer's face - Paul Blart",
            "description": "reason field from file_redaction_flags09192348."
          },
          "approved": {
            "type": "boolean",
            "example": false,
            "description": "approved field from file_redaction_flags09192348."
          },
          "ts_seconds": {
            "type": "number",
            "example": 0.569133,
            "description": "ts_seconds field from file_redaction_flags09192348."
          },
          "coords": {
            "type": "string",
            "example": "{\"x\": 286.5, \"y\": 148, \"width\": 24, \"height\": 24}",
            "description": "coords field from file_redaction_flags09192348."
          },
          "created_by": {
            "type": "string",
            "format": "uuid",
            "example": "ab99f432-1141-43bf-a826-ea015838179f",
            "description": "created_by field from file_redaction_flags09192348."
          },
          "created_at": {
            "type": "string",
            "example": "2025-09-05 17:05:19.723 -0500",
            "description": "created_at field from file_redaction_flags09192348."
          },
          "updated_at": {
            "type": "string",
            "example": "2025-09-05 17:05:19.723 -0500",
            "description": "updated_at field from file_redaction_flags09192348."
          },
          "end_seconds": {
            "type": "number",
            "description": "end_seconds field from file_redaction_flags09192348."
          },
          "ts_end_seconds": {
            "type": "number",
            "example": 0.819133,
            "description": "ts_end_seconds field from file_redaction_flags09192348."
          }
        },
        "additionalProperties": false,
        "description": "Schema inferred from file_redaction_flags dataset.",
        "example": {
          "id": "7f20f464-83e0-460d-b3e6-611c379c4341",
          "file_id": "de13d372-a870-4eea-b975-9060d442f38c",
          "kind": "Face",
          "reason": "This is an officer's face - Paul Blart",
          "approved": false,
          "ts_seconds": 0.569133,
          "coords": "{\"x\": 286.5, \"y\": 148, \"width\": 24, \"height\": 24}",
          "created_by": "ab99f432-1141-43bf-a826-ea015838179f",
          "created_at": "2025-09-05 17:05:19.723 -0500",
          "updated_at": "2025-09-05 17:05:19.723 -0500",
          "end_seconds": null,
          "ts_end_seconds": 0.819133
        }
      },
      "Files": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "6ff9fff2-027a-48a0-a5c1-bd2c6e5c03e7",
            "description": "id field from files09192347."
          },
          "org_id": {
            "type": "string",
            "format": "uuid",
            "example": "743db90f-7e76-49f7-8d4e-5f42a16efc06",
            "description": "org_id field from files09192347."
          },
          "name": {
            "type": "string",
            "example": "foia_correspondence.mbox",
            "description": "name field from files09192347."
          },
          "size_bytes": {
            "type": "integer",
            "example": 997,
            "description": "size_bytes field from files09192347."
          },
          "mime_type": {
            "type": "string",
            "example": "application/octet-stream",
            "description": "mime_type field from files09192347."
          },
          "department": {
            "type": "string",
            "example": "Unknown",
            "description": "department field from files09192347."
          },
          "tags": {
            "type": "string",
            "example": "{}",
            "description": "tags field from files09192347."
          },
          "relevancy_score": {
            "type": "integer",
            "example": 0,
            "description": "relevancy_score field from files09192347."
          },
          "review_status": {
            "type": "string",
            "example": "pending",
            "description": "review_status field from files09192347."
          },
          "pages": {
            "type": "number",
            "description": "pages field from files09192347."
          },
          "duration_seconds": {
            "type": "number",
            "description": "duration_seconds field from files09192347."
          },
          "s3_bucket": {
            "type": "string",
            "example": "foia-dev-andromeda",
            "description": "s3_bucket field from files09192347."
          },
          "s3_key": {
            "type": "string",
            "example": "743db90f-7e76-49f7-8d4e-5f42a16efc06/raw/e863a541-0832-4bce-abb8-11f32ffe5e3b/foia_correspondence.mbox",
            "description": "s3_key field from files09192347."
          },
          "created_by": {
            "type": "string",
            "format": "uuid",
            "example": "ab99f432-1141-43bf-a826-ea015838179f",
            "description": "created_by field from files09192347."
          },
          "uploaded_at": {
            "type": "string",
            "example": "2025-08-29 10:28:48.713 -0500",
            "description": "uploaded_at field from files09192347."
          },
          "updated_at": {
            "type": "string",
            "example": "2025-08-29 10:28:48.713 -0500",
            "description": "updated_at field from files09192347."
          },
          "s3_bucket_original": {
            "type": "string",
            "example": "foia-dev-andromeda",
            "description": "s3_bucket_original field from files09192347."
          },
          "s3_key_original": {
            "type": "string",
            "example": "743db90f-7e76-49f7-8d4e-5f42a16efc06/raw/e863a541-0832-4bce-abb8-11f32ffe5e3b/foia_correspondence.mbox",
            "description": "s3_key_original field from files09192347."
          },
          "s3_bucket_parsed": {
            "type": "string",
            "example": "foia-dev-andromeda-parse",
            "description": "s3_bucket_parsed field from files09192347."
          },
          "s3_key_parsed": {
            "type": "string",
            "example": "parsed/743db90f-7e76-49f7-8d4e-5f42a16efc06/Zm9pYS1kZXYtYW5kcm9tZWRhLzc0M2RiOTBmLTdlNzYtNDlmNy04ZDRlLTVmNDJhMTZlZmMwNi9yYXcvMmUxZjE5NzUtNDBjYy00YmY1LThmNzctN2VjYTkwMjhmMjFjL0Rpc3BhdGNoIEMyMy0wMTE1OC5wZGY.json",
            "description": "s3_key_parsed field from files09192347."
          }
        },
        "additionalProperties": false,
        "description": "Schema inferred from files dataset.",
        "example": {
          "id": "6ff9fff2-027a-48a0-a5c1-bd2c6e5c03e7",
          "org_id": "743db90f-7e76-49f7-8d4e-5f42a16efc06",
          "name": "foia_correspondence.mbox",
          "size_bytes": 997,
          "mime_type": "application/octet-stream",
          "department": "Unknown",
          "tags": "{}",
          "relevancy_score": 0,
          "review_status": "pending",
          "pages": null,
          "duration_seconds": null,
          "s3_bucket": "foia-dev-andromeda",
          "s3_key": "743db90f-7e76-49f7-8d4e-5f42a16efc06/raw/e863a541-0832-4bce-abb8-11f32ffe5e3b/foia_correspondence.mbox",
          "created_by": "ab99f432-1141-43bf-a826-ea015838179f",
          "uploaded_at": "2025-08-29 10:28:48.713 -0500",
          "updated_at": "2025-08-29 10:28:48.713 -0500",
          "s3_bucket_original": "foia-dev-andromeda",
          "s3_key_original": "743db90f-7e76-49f7-8d4e-5f42a16efc06/raw/e863a541-0832-4bce-abb8-11f32ffe5e3b/foia_correspondence.mbox",
          "s3_bucket_parsed": null,
          "s3_key_parsed": null
        }
      },
      "Uploads": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "44837786-5350-48d8-b4b1-b406b7c40135",
            "description": "id field from uploads09192347."
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "example": "743db90f-7e76-49f7-8d4e-5f42a16efc06",
            "description": "tenant_id field from uploads09192347."
          },
          "s3_key": {
            "type": "string",
            "example": "743db90f-7e76-49f7-8d4e-5f42a16efc06/raw/cd504d47-afc7-418d-885e-6521d54a14a6/ Report Number_ 2023-001158.docx",
            "description": "s3_key field from uploads09192347."
          },
          "filename": {
            "type": "string",
            "example": " Report Number_ 2023-001158.docx",
            "description": "filename field from uploads09192347."
          },
          "mime": {
            "type": "string",
            "example": "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
            "description": "mime field from uploads09192347."
          },
          "size_bytes": {
            "type": "integer",
            "example": 8090,
            "description": "size_bytes field from uploads09192347."
          },
          "status": {
            "type": "string",
            "example": "uploaded",
            "description": "status field from uploads09192347."
          },
          "etag": {
            "type": "string",
            "example": "\"b9ebe0bf53ba446b4f801374ce6872c3\"",
            "description": "etag field from uploads09192347."
          },
          "error": {
            "type": "number",
            "description": "error field from uploads09192347."
          },
          "created_by": {
            "type": "string",
            "format": "uuid",
            "example": "ab99f432-1141-43bf-a826-ea015838179f",
            "description": "created_by field from uploads09192347."
          },
          "created_at": {
            "type": "string",
            "example": "2025-08-29 10:28:45.202 -0500",
            "description": "created_at field from uploads09192347."
          },
          "updated_at": {
            "type": "string",
            "example": "2025-08-29 10:28:45.584 -0500",
            "description": "updated_at field from uploads09192347."
          },
          "org_id": {
            "type": "string",
            "format": "uuid",
            "example": "743db90f-7e76-49f7-8d4e-5f42a16efc06",
            "description": "org_id field from uploads09192347."
          }
        },
        "additionalProperties": false,
        "description": "Schema inferred from uploads dataset.",
        "example": {
          "id": "44837786-5350-48d8-b4b1-b406b7c40135",
          "tenant_id": "743db90f-7e76-49f7-8d4e-5f42a16efc06",
          "s3_key": "743db90f-7e76-49f7-8d4e-5f42a16efc06/raw/cd504d47-afc7-418d-885e-6521d54a14a6/ Report Number_ 2023-001158.docx",
          "filename": " Report Number_ 2023-001158.docx",
          "mime": "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
          "size_bytes": 8090,
          "status": "uploaded",
          "etag": "\"b9ebe0bf53ba446b4f801374ce6872c3\"",
          "error": null,
          "created_by": "ab99f432-1141-43bf-a826-ea015838179f",
          "created_at": "2025-08-29 10:28:45.202 -0500",
          "updated_at": "2025-08-29 10:28:45.584 -0500",
          "org_id": "743db90f-7e76-49f7-8d4e-5f42a16efc06"
        }
      },
      "VideoDetections": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "d2f0cf30-b573-4797-97d4-aaab3ec2c5f1",
            "description": "id field from video_detections09192349."
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "example": "743db90f-7e76-49f7-8d4e-5f42a16efc06",
            "description": "tenant_id field from video_detections09192349."
          },
          "file_id": {
            "type": "string",
            "format": "uuid",
            "example": "de13d372-a870-4eea-b975-9060d442f38c",
            "description": "file_id field from video_detections09192349."
          },
          "case_id": {
            "type": "number",
            "description": "case_id field from video_detections09192349."
          },
          "doc_id": {
            "type": "string",
            "format": "uuid",
            "example": "de13d372-a870-4eea-b975-9060d442f38c",
            "description": "doc_id field from video_detections09192349."
          },
          "detections": {
            "type": "string",
            "example": "[]",
            "description": "detections field from video_detections09192349."
          },
          "created_at": {
            "type": "string",
            "example": "2025-09-07 13:48:43.927 -0500",
            "description": "created_at field from video_detections09192349."
          }
        },
        "additionalProperties": false,
        "description": "Schema inferred from video_detections dataset.",
        "example": {
          "id": "d2f0cf30-b573-4797-97d4-aaab3ec2c5f1",
          "tenant_id": "743db90f-7e76-49f7-8d4e-5f42a16efc06",
          "file_id": "de13d372-a870-4eea-b975-9060d442f38c",
          "case_id": null,
          "doc_id": "de13d372-a870-4eea-b975-9060d442f38c",
          "detections": "[]",
          "created_at": "2025-09-07 13:48:43.927 -0500"
        }
      },
      "Error": {
        "type": "object",
        "required": [
          "error",
          "message"
        ],
        "properties": {
          "error": {
            "type": "string",
            "description": "Short error code or category."
          },
          "message": {
            "type": "string",
            "description": "Human-readable error explanation."
          },
          "details": {
            "type": "object",
            "description": "Optional structured error details for debugging."
          }
        },
        "example": {
          "error": "BadRequest",
          "message": "Missing required parameter 'fileId'.",
          "details": {
            "param": "fileId"
          }
        }
      },
      "SearchRequest": {
        "type": "object",
        "required": [
          "q"
        ],
        "properties": {
          "q": {
            "type": "string",
            "description": "Query string. Supports hybrid semantic + keyword search."
          },
          "caseId": {
            "type": "string",
            "format": "uuid",
            "description": "Filter results to a specific case."
          },
          "fileId": {
            "type": "string",
            "format": "uuid",
            "description": "Filter to a single file."
          },
          "limit": {
            "type": "integer",
            "default": 20,
            "minimum": 1,
            "maximum": 100,
            "description": "Number of results to return."
          },
          "dateFrom": {
            "type": "string",
            "format": "date-time",
            "description": "Lower bound for file create/update timestamps."
          },
          "dateTo": {
            "type": "string",
            "format": "date-time",
            "description": "Upper bound for file create/update timestamps."
          }
        },
        "example": {
          "q": "suspect red sedan",
          "caseId": "c0a80101-0000-0000-0000-000000000001",
          "limit": 20
        }
      },
      "SearchResult": {
        "type": "object",
        "properties": {
          "fileId": {
            "type": "string",
            "format": "uuid",
            "description": "Matched file id."
          },
          "snippet": {
            "type": "string",
            "description": "Text snippet with highlights around the match."
          },
          "score": {
            "type": "number",
            "description": "Relevance score (higher is more relevant)."
          },
          "metadata": {
            "type": "object",
            "description": "Arbitrary metadata for the hit (page, timestamp, etc.)."
          }
        },
        "example": {
          "fileId": "f2a1d57e-9f7a-4d1b-8ef5-3b8f6d5a1a9c",
          "snippet": "...red sedan parked on 3rd...",
          "score": 0.83,
          "metadata": {
            "page": 12
          }
        }
      },
      "SearchResponse": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchResult"
            },
            "description": "Ordered search results."
          }
        },
        "example": {
          "results": [
            {
              "fileId": "f2a1...",
              "snippet": "...",
              "score": 0.83
            }
          ]
        }
      },
      "UploadInitRequest": {
        "type": "object",
        "required": [
          "filename",
          "contentType",
          "sizeBytes"
        ],
        "properties": {
          "filename": {
            "type": "string",
            "description": "Client-provided file name (used for display only)."
          },
          "contentType": {
            "type": "string",
            "description": "MIME type of the file (e.g., application/pdf)."
          },
          "sizeBytes": {
            "type": "integer",
            "description": "Total file size in bytes."
          }
        },
        "example": {
          "filename": "report.pdf",
          "contentType": "application/pdf",
          "sizeBytes": 1048576
        }
      },
      "UploadInitResponse": {
        "type": "object",
        "properties": {
          "mode": {
            "type": "string",
            "enum": [
              "single",
              "multipart"
            ],
            "description": "Upload mode chosen by server based on size."
          },
          "uploadId": {
            "type": "string",
            "description": "Server-side upload session id."
          },
          "key": {
            "type": "string",
            "description": "S3 object key to use for subsequent requests."
          },
          "putUrl": {
            "type": "string",
            "description": "Pre-signed URL for single part upload (present when mode=single)."
          },
          "uploadIdS3": {
            "type": "string",
            "description": "S3 UploadId for multipart uploads."
          }
        },
        "example": {
          "mode": "multipart",
          "uploadId": "upl_123",
          "key": "tenant/abc/file/xyz",
          "uploadIdS3": "AbCdeFG..."
        }
      },
      "UploadCompleteRequest": {
        "type": "object",
        "required": [
          "uploadId",
          "key"
        ],
        "properties": {
          "uploadId": {
            "type": "string",
            "description": "Server-side upload session id from /upload/init."
          },
          "key": {
            "type": "string",
            "description": "S3 key that was uploaded."
          },
          "uploadIdS3": {
            "type": "string",
            "description": "S3 UploadId (for multipart)."
          },
          "parts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "ETag": {
                  "type": "string"
                },
                "PartNumber": {
                  "type": "integer"
                }
              }
            },
            "description": "Completed multipart parts."
          },
          "etag": {
            "type": "string",
            "description": "ETag returned by S3 for single-part upload."
          },
          "caseId": {
            "type": "string",
            "format": "uuid",
            "description": "Optional: attach file to case upon finalization."
          }
        },
        "example": {
          "uploadId": "upl_123",
          "key": "tenant/abc/file/xyz",
          "uploadIdS3": "AbC...",
          "parts": [
            {
              "ETag": "\"etag1\"",
              "PartNumber": 1
            }
          ]
        }
      }
    },
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key"
      }
    }
  }
}